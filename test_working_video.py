import asyncio
import logging
from youtube_transcript_api import YouTubeTranscriptApi

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

async def test_working_video():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–±–æ—á–µ–µ –≤–∏–¥–µ–æ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è"""
    video_id = "dQw4w9WgXcQ"  # Rick Roll - –¥–æ–ª–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å
    
    logger.info(f"üß™ –¢–µ—Å—Ç–∏—Ä—É—é —Ä–∞–±–æ—á–µ–µ –≤–∏–¥–µ–æ: {video_id}")
    
    try:
        # 1. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å—É–±—Ç–∏—Ç—Ä–æ–≤
        logger.info("üìã –ü–æ–ª—É—á–∞—é —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å—É–±—Ç–∏—Ç—Ä–æ–≤...")
        list_transcripts = YouTubeTranscriptApi.list_transcripts(video_id)
        available_languages = [t.language_code for t in list_transcripts]
        logger.info(f"üåç –î–æ—Å—Ç—É–ø–Ω—ã–µ —è–∑—ã–∫–∏: {available_languages}")
        
        # 2. –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Å—É–±—Ç–∏—Ç—Ä—ã –¥–ª—è –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ
        logger.info("üé¨ –¢–µ—Å—Ç–∏—Ä—É—é –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫...")
        try:
            transcript = YouTubeTranscriptApi.get_transcript(video_id, languages=['en'])
            logger.info(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã —Å—É–±—Ç–∏—Ç—Ä—ã –¥–ª—è en: {len(transcript)} —Å—Ç—Ä–æ–∫")
            logger.info(f"üìù –ü–µ—Ä–≤—ã–µ 3 —Å—Ç—Ä–æ–∫–∏: {transcript[:3]}")
            return True
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –¥–ª—è —è–∑—ã–∫–∞ en: {e}")
        
        # 3. –ü—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ list_transcripts
        logger.info("üîç –ü—Ä–æ–±—É—é —á–µ—Ä–µ–∑ list_transcripts...")
        try:
            for transcript_obj in list_transcripts:
                if transcript_obj.language_code == 'en':
                    transcript = transcript_obj.fetch()
                    logger.info(f"‚úÖ –£—Å–ø–µ—à–Ω–æ —á–µ—Ä–µ–∑ list_transcripts: {len(transcript)} —Å—Ç—Ä–æ–∫")
                    return True
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —á–µ—Ä–µ–∑ list_transcripts: {e}")
            
    except Exception as e:
        logger.error(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
    
    return False

if __name__ == "__main__":
    asyncio.run(test_working_video()) 