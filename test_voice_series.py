#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —Å–µ—Ä–∏–π –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
"""

import asyncio
import time
from bot import (
    add_voice_to_series, 
    get_voice_series, 
    cleanup_expired_voice_series,
    voice_series_groups,
    voice_series_timeout
)

async def test_voice_series():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Å–µ—Ä–∏–π –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —Å–µ—Ä–∏–π –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π")
    
    # –°–æ–∑–¥–∞–µ–º –º–æ–∫-–æ–±—ä–µ–∫—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    class MockVoice:
        def __init__(self, duration, file_id):
            self.duration = duration
            self.file_id = file_id
    
    user_id = 12345
    
    print(f"\n1Ô∏è‚É£ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è...")
    voice1 = MockVoice(30, "file_id_1")
    series_id1 = await add_voice_to_series(user_id, voice1)
    print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Å–µ—Ä–∏—è: {series_id1}")
    
    print(f"\n2Ô∏è‚É£ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Ç–æ—Ä–æ–≥–æ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è...")
    voice2 = MockVoice(45, "file_id_2")
    series_id2 = await add_voice_to_series(user_id, voice2)
    print(f"   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Å–µ—Ä–∏—é: {series_id2}")
    
    print(f"\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Å–µ—Ä–∏–∏...")
    series_messages = await get_voice_series(user_id, series_id1)
    print(f"   üìä –°–æ–æ–±—â–µ–Ω–∏–π –≤ —Å–µ—Ä–∏–∏: {len(series_messages)}")
    for i, msg in enumerate(series_messages):
        print(f"      {i+1}. –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {msg['voice'].duration}—Å, file_id: {msg['voice'].file_id}")
    
    print(f"\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Å–ª–æ–≤–∞—Ä—è...")
    print(f"   üåê –í—Å–µ–≥–æ —Å–µ—Ä–∏–π: {len(voice_series_groups)}")
    for series_id, messages in voice_series_groups.items():
        print(f"      {series_id}: {len(messages)} —Å–æ–æ–±—â–µ–Ω–∏–π")
    
    print(f"\n5Ô∏è‚É£ –°–∏–º—É–ª—è—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö —Å–µ—Ä–∏–π...")
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä–æ–µ –≤—Ä–µ–º—è –¥–ª—è –ø–µ—Ä–≤–æ–π —Å–µ—Ä–∏–∏
    if series_id1 in voice_series_groups and voice_series_groups[series_id1]:
        voice_series_groups[series_id1][0]['timestamp'] = time.time() - voice_series_timeout - 10
    
    await cleanup_expired_voice_series()
    print(f"   üßπ –ü–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏ —Å–µ—Ä–∏–π: {len(voice_series_groups)}")
    
    print(f"\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")

if __name__ == "__main__":
    asyncio.run(test_voice_series())
