#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ —Å –≤—ã–±–æ—Ä–æ–º —Ñ–æ—Ä–º–∞—Ç–∞ —Å—É–±—Ç–∏—Ç—Ä–æ–≤.
–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ –±–æ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å—É–±—Ç–∏—Ç—Ä—ã.
"""

import os
import sys
import asyncio
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from bot import (
    extract_video_id, 
    get_available_transcripts, 
    format_subtitles,
    build_format_keyboard,
    build_action_keyboard
)

def demo_format_selection():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤—ã–±–æ—Ä–∞ —Ñ–æ—Ä–º–∞—Ç–∞ —Å—É–±—Ç–∏—Ç—Ä–æ–≤"""
    print("ü§ñ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –†–ê–ë–û–¢–´ –ë–û–¢–ê –° –í–´–ë–û–†–û–ú –§–û–†–ú–ê–¢–ê –°–£–ë–¢–ò–¢–†–û–í")
    print("=" * 60)
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ (–∏–º–∏—Ç–∏—Ä—É–µ–º —Å—É–±—Ç–∏—Ç—Ä—ã)
    test_transcript = [
        {'start': 0.0, 'text': '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –≤–∏–¥–µ–æ—É—Ä–æ–∫'},
        {'start': 3.5, 'text': '–°–µ–≥–æ–¥–Ω—è –º—ã –±—É–¥–µ–º –∏–∑—É—á–∞—Ç—å –æ—Å–Ω–æ–≤—ã –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è'},
        {'start': 8.2, 'text': 'Python - —ç—Ç–æ –º–æ—â–Ω—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è'},
        {'start': 12.8, 'text': '–û–Ω –ø—Ä–æ—Å—Ç –≤ –∏–∑—É—á–µ–Ω–∏–∏ –∏ –∏–º–µ–µ—Ç –ø–æ–Ω—è—Ç–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å'},
        {'start': 18.5, 'text': '–î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º —Å —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Python'},
        {'start': 25.3, 'text': '–°–∫–∞—á–∞–π—Ç–µ Python —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Å–∞–π—Ç–∞ python.org'},
        {'start': 32.1, 'text': '–ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ—Ç–∫—Ä–æ–π—Ç–µ –∫–æ–º–∞–Ω–¥–Ω—É—é —Å—Ç—Ä–æ–∫—É'},
        {'start': 38.7, 'text': '–í–≤–µ–¥–∏—Ç–µ python --version –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏'},
        {'start': 45.2, 'text': '–û—Ç–ª–∏—á–Ω–æ! Python —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ'},
        {'start': 52.8, 'text': '–¢–µ–ø–µ—Ä—å –¥–∞–≤–∞–π—Ç–µ —Å–æ–∑–¥–∞–¥–∏–º –ø–µ—Ä–≤—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É'}
    ]
    
    print("üìã –®–∞–≥ 1: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ YouTube –≤–∏–¥–µ–æ")
    video_url = "https://www.youtube.com/watch?v=dQw4w9WgXcQ"
    print(f"   –°—Å—ã–ª–∫–∞: {video_url}")
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –≤–∏–¥–µ–æ
    video_id = extract_video_id(video_url)
    print(f"   –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–π ID: {video_id}")
    
    print("\nüìã –®–∞–≥ 2: –ë–æ—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å—É–±—Ç–∏—Ç—Ä—ã")
    print("   (–í –¥–µ–º–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ)")
    print(f"   –ù–∞–π–¥–µ–Ω–æ —Å—Ç—Ä–æ–∫ —Å—É–±—Ç–∏—Ç—Ä–æ–≤: {len(test_transcript)}")
    
    print("\nüìã –®–∞–≥ 3: –ë–æ—Ç –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤—ã–±—Ä–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ")
    action_keyboard = build_action_keyboard()
    print("   –î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:")
    for row in action_keyboard.inline_keyboard:
        for button in row:
            print(f"   - {button.text} (callback: {button.callback_data})")
    
    print("\nüìã –®–∞–≥ 4: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±–∏—Ä–∞–µ—Ç '–¢–æ–ª—å–∫–æ —Å—É–±—Ç–∏—Ç—Ä—ã'")
    selected_action = 'action_subtitles'
    print(f"   –í—ã–±—Ä–∞–Ω–æ: {selected_action}")
    
    print("\nüìã –®–∞–≥ 5: –ë–æ—Ç –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤—ã–±—Ä–∞—Ç—å —Ñ–æ—Ä–º–∞—Ç —Å—É–±—Ç–∏—Ç—Ä–æ–≤")
    format_keyboard = build_format_keyboard()
    print("   –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã:")
    for row in format_keyboard.inline_keyboard:
        for button in row:
            print(f"   - {button.text} (callback: {button.callback_data})")
    
    print("\nüìã –®–∞–≥ 6: –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
    print("   –§–æ—Ä–º–∞—Ç 1: –° –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –º–µ—Ç–∫–∞–º–∏")
    subtitles_with_time = format_subtitles(test_transcript, with_time=True)
    print("   –†–µ–∑—É–ª—å—Ç–∞—Ç:")
    for line in subtitles_with_time.split('\n')[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 —Å—Ç—Ä–æ–∫
        print(f"   {line}")
    print("   ...")
    
    print("\n   –§–æ—Ä–º–∞—Ç 2: –ë–µ–∑ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–∫")
    subtitles_plain = format_subtitles(test_transcript, with_time=False)
    print("   –†–µ–∑—É–ª—å—Ç–∞—Ç:")
    for line in subtitles_plain.split('\n')[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 —Å—Ç—Ä–æ–∫
        print(f"   {line}")
    print("   ...")
    
    print("\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print(f"   –°—Ç—Ä–æ–∫ —Å—É–±—Ç–∏—Ç—Ä–æ–≤: {len(test_transcript)}")
    print(f"   –†–∞–∑–º–µ—Ä —Å —Ç–∞–π–º-–∫–æ–¥–∞–º–∏: {len(subtitles_with_time)} —Å–∏–º–≤–æ–ª–æ–≤")
    print(f"   –†–∞–∑–º–µ—Ä –±–µ–∑ —Ç–∞–π–º-–∫–æ–¥–æ–≤: {len(subtitles_plain)} —Å–∏–º–≤–æ–ª–æ–≤")
    
    return test_transcript, subtitles_with_time, subtitles_plain

def demo_real_subtitles():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ —Å—É–±—Ç–∏—Ç—Ä–∞–º–∏"""
    print("\n" + "=" * 60)
    print("üé¨ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –° –†–ï–ê–õ–¨–ù–´–ú–ò –°–£–ë–¢–ò–¢–†–ê–ú–ò")
    print("=" * 60)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ —Å—É–±—Ç–∏—Ç—Ä—ã
    subtitle_file = Path('subtitles_DpQtKCcTMnQ_ru.txt')
    if not subtitle_file.exists():
        print("‚ùå –§–∞–π–ª —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ —Å—É–±—Ç–∏—Ç—Ä–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    print(f"üìÅ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ —Å—É–±—Ç–∏—Ç—Ä—ã –∏–∑: {subtitle_file}")
    
    try:
        with open(subtitle_file, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –ü–∞—Ä—Å–∏–º —Å—É–±—Ç–∏—Ç—Ä—ã –≤ —Ñ–æ—Ä–º–∞—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        lines = content.strip().split('\n')
        transcript = []
        current_time = 0
        
        for line in lines[:50]:  # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 50 —Å—Ç—Ä–æ–∫ –¥–ª—è –¥–µ–º–æ
            if line.strip():
                transcript.append({
                    'start': current_time,
                    'text': line.strip()
                })
                current_time += 3
        
        print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(transcript)} —Å—Ç—Ä–æ–∫ —Ä–µ–∞–ª—å–Ω—ã—Ö —Å—É–±—Ç–∏—Ç—Ä–æ–≤")
        
        print("\nüìã –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∞–ª—å–Ω—ã—Ö —Å—É–±—Ç–∏—Ç—Ä–æ–≤:")
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å —Ç–∞–π–º-–∫–æ–¥–∞–º–∏
        subtitles_with_time = format_subtitles(transcript, with_time=True)
        print("\n   üîπ –° –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –º–µ—Ç–∫–∞–º–∏ (–ø–µ—Ä–≤—ã–µ 3 —Å—Ç—Ä–æ–∫–∏):")
        for line in subtitles_with_time.split('\n')[:3]:
            print(f"   {line}")
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –±–µ–∑ —Ç–∞–π–º-–∫–æ–¥–æ–≤
        subtitles_plain = format_subtitles(transcript, with_time=False)
        print("\n   üîπ –ë–µ–∑ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–∫ (–ø–µ—Ä–≤—ã–µ 3 —Å—Ç—Ä–æ–∫–∏):")
        for line in subtitles_plain.split('\n')[:3]:
            print(f"   {line}")
        
        print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö —Å—É–±—Ç–∏—Ç—Ä–æ–≤:")
        print(f"   –°—Ç—Ä–æ–∫: {len(transcript)}")
        print(f"   –†–∞–∑–º–µ—Ä —Å —Ç–∞–π–º-–∫–æ–¥–∞–º–∏: {len(subtitles_with_time)} —Å–∏–º–≤–æ–ª–æ–≤")
        print(f"   –†–∞–∑–º–µ—Ä –±–µ–∑ —Ç–∞–π–º-–∫–æ–¥–æ–≤: {len(subtitles_plain)} —Å–∏–º–≤–æ–ª–æ–≤")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–µ–º–æ-—Ñ–∞–π–ª—ã
        demo_dir = Path('demo_output')
        demo_dir.mkdir(exist_ok=True)
        
        with open(demo_dir / 'demo_with_time.txt', 'w', encoding='utf-8') as f:
            f.write(subtitles_with_time)
        
        with open(demo_dir / 'demo_plain.txt', 'w', encoding='utf-8') as f:
            f.write(subtitles_plain)
        
        print(f"\nüíæ –î–µ–º–æ-—Ñ–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–ø–∫–µ: {demo_dir}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ä–µ–∞–ª—å–Ω—ã—Ö —Å—É–±—Ç–∏—Ç—Ä–æ–≤: {e}")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    print("üöÄ –ó–ê–ü–£–°–ö –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–ò –†–ê–ë–û–¢–´ –ë–û–¢–ê")
    print("=" * 60)
    
    try:
        # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        demo_format_selection()
        
        # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ —Å—É–±—Ç–∏—Ç—Ä–∞–º–∏
        demo_real_subtitles()
        
        print("\n" + "=" * 60)
        print("‚úÖ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!")
        print("=" * 60)
        print("\nüìù –ß—Ç–æ –±—ã–ª–æ –ø—Ä–æ–¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ:")
        print("   ‚Ä¢ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ ID –≤–∏–¥–µ–æ –∏–∑ —Å—Å—ã–ª–∫–∏")
        print("   ‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–æ—Ä–º–∞—Ç–∞")
        print("   ‚Ä¢ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—É–±—Ç–∏—Ç—Ä–æ–≤ —Å —Ç–∞–π–º-–∫–æ–¥–∞–º–∏")
        print("   ‚Ä¢ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—É–±—Ç–∏—Ç—Ä–æ–≤ –±–µ–∑ —Ç–∞–π–º-–∫–æ–¥–æ–≤")
        print("   ‚Ä¢ –†–∞–±–æ—Ç–∞ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏")
        print("   ‚Ä¢ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ —Ñ–∞–π–ª—ã")
        
        print("\nü§ñ –î–ª—è –∑–∞–ø—É—Å–∫–∞ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –±–æ—Ç–∞:")
        print("   1. –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env —Å —Ç–æ–∫–µ–Ω–æ–º TELEGRAM_BOT_TOKEN")
        print("   2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python bot.py")
        print("   3. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É —Å—Å—ã–ª–∫—É –Ω–∞ YouTube –≤–∏–¥–µ–æ")
        print("   4. –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç —Å—É–±—Ç–∏—Ç—Ä–æ–≤")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –≤ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏: {e}")

if __name__ == "__main__":
    main() 