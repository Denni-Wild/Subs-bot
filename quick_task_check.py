#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–¥–∞—á –ø—Ä–æ–µ–∫—Ç–∞ Subs-bot

–ó–∞–ø—É—Å–∫: python quick_task_check.py
"""

from task_manager import TaskManager

def main():
    """–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–¥–∞—á"""
    print("üöÄ Subs-bot Task Manager")
    print("=" * 50)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∑–∞–¥–∞—á
    task_manager = TaskManager()
    
    # –ü–æ–∫–∞–∑–∞—Ç—å —Å–≤–æ–¥–∫—É
    summary = task_manager.get_project_summary()
    print(f"\nüìä –°–≤–æ–¥–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞:")
    print(f"  –í—Å–µ–≥–æ –∑–∞–¥–∞—á: {summary['total_tasks']}")
    print(f"  –ó–∞–≤–µ—Ä—à–µ–Ω–æ: {summary['completed_tasks']}")
    print(f"  –í —Ä–∞–±–æ—Ç–µ: {summary['in_progress_tasks']}")
    print(f"  –ö –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é: {summary['todo_tasks']}")
    print(f"  –°—Ä–µ–¥–Ω–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å: {summary['average_progress']}%")
    print(f"  –ü—Ä–æ—Ü–µ–Ω—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: {summary['completion_rate']}%")
    
    # –ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–¥–∞—á–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    print(f"\nüè∑Ô∏è –ó–∞–¥–∞—á–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:")
    categories = set(task.category for task in task_manager.tasks.values())
    
    for category in sorted(categories):
        category_tasks = task_manager.get_tasks_by_category(category)
        completed = len([t for t in category_tasks if t.status == "DONE"])
        total = len(category_tasks)
        
        print(f"\n  {category}: {completed}/{total} –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
        
        for task in category_tasks:
            status_emoji = {
                "TODO": "‚è≥",
                "IN_PROGRESS": "üîÑ", 
                "REVIEW": "üëÄ",
                "DONE": "‚úÖ"
            }
            
            priority_emoji = {
                "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π": "üî¥",
                "–í—ã—Å–æ–∫–∏–π": "üü†",
                "–°—Ä–µ–¥–Ω–∏–π": "üü°",
                "–ù–∏–∑–∫–∏–π": "üü¢"
            }
            
            print(f"    {status_emoji.get(task.status, '‚ùì')} {task.id}: {task.name}")
            print(f"      –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {priority_emoji.get(task.priority, '')} {task.priority}")
            print(f"      –ü—Ä–æ–≥—Ä–µ—Å—Å: {task.progress}%")
            if task.dependencies != "–ù–µ—Ç":
                print(f"      –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: {task.dependencies}")
    
    # –ü–æ–∫–∞–∑–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏
    print(f"\nüéØ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    todo_tasks = task_manager.get_tasks_by_status("TODO")
    high_priority_tasks = [t for t in todo_tasks if t.priority in ["–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π", "–í—ã—Å–æ–∫–∏–π"]]
    
    if high_priority_tasks:
        print("  –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ –∑–∞–¥–∞—á–∏ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:")
        for task in sorted(high_priority_tasks, key=lambda x: x.priority):
            print(f"    üî¥ {task.id}: {task.name}")
    
    # –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    print(f"\nüí° –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:")
    print("  python task_manager.py --summary                    # –°–≤–æ–¥–∫–∞")
    print("  python task_manager.py --category 'Mind Map'       # –ó–∞–¥–∞—á–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏")
    print("  python task_manager.py --status 'TODO'             # –ó–∞–¥–∞—á–∏ –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é")
    print("  python task_manager.py --update-status TASK-007 IN_PROGRESS  # –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å")
    print("  python task_manager.py --update-progress TASK-007 50        # –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å")
    print("  python task_manager.py --export-md REPORT.md       # –≠–∫—Å–ø–æ—Ä—Ç –≤ Markdown")
    print("  python task_manager.py --export-json tasks.json    # –≠–∫—Å–ø–æ—Ä—Ç –≤ JSON")

if __name__ == "__main__":
    main()
