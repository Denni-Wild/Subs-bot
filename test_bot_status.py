#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞
"""

import requests
import json
import os
from dotenv import load_dotenv

def test_bot_status():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –±–æ—Ç–∞ —á–µ—Ä–µ–∑ Telegram API"""
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    load_dotenv()
    token = os.getenv('TELEGRAM_BOT_TOKEN')
    
    if not token:
        print("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
        return
    
    print(f"üîç –ü—Ä–æ–≤–µ—Ä—è—é —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞ —Å —Ç–æ–∫–µ–Ω–æ–º: {token[:10]}...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
        url = f"https://api.telegram.org/bot{token}/getMe"
        response = requests.get(url, timeout=10)
        
        if response.status_code == 200:
            bot_info = response.json()
            if bot_info.get('ok'):
                bot_data = bot_info['result']
                print("‚úÖ –ë–æ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω!")
                print(f"   ü§ñ –ò–º—è: {bot_data.get('first_name', 'N/A')}")
                print(f"   üìù Username: @{bot_data.get('username', 'N/A')}")
                print(f"   üÜî ID: {bot_data.get('id', 'N/A')}")
                print(f"   üìã –ú–æ–∂–µ—Ç –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è—Ç—å—Å—è –∫ –≥—Ä—É–ø–ø–∞–º: {bot_data.get('can_join_groups', 'N/A')}")
                print(f"   üì¢ –ú–æ–∂–µ—Ç —á–∏—Ç–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è: {bot_data.get('can_read_all_group_messages', 'N/A')}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                print("\nüîÑ –ü—Ä–æ–≤–µ—Ä—è—é –ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...")
                updates_url = f"https://api.telegram.org/bot{token}/getUpdates"
                updates_response = requests.get(updates_url, timeout=10)
                
                if updates_response.status_code == 200:
                    updates_info = updates_response.json()
                    if updates_info.get('ok'):
                        updates_count = len(updates_info.get('result', []))
                        print(f"   üìä –ü–æ–ª—É—á–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {updates_count}")
                        
                        if updates_count > 0:
                            print("   üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:")
                            for i, update in enumerate(updates_info['result'][-3:]):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3
                                update_id = update.get('update_id', 'N/A')
                                message_type = 'message' if 'message' in update else 'callback_query' if 'callback_query' in update else 'unknown'
                                print(f"      {i+1}. ID: {update_id}, –¢–∏–ø: {message_type}")
                    else:
                        print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {updates_info.get('description', 'Unknown error')}")
                else:
                    print(f"   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: HTTP {updates_response.status_code}")
                
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ API: {bot_info.get('description', 'Unknown error')}")
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
            
    except requests.exceptions.Timeout:
        print("‚ùå –¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ Telegram API")
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: {e}")
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    test_bot_status()
