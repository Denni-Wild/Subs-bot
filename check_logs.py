#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–ø–∏—Å–µ–π –≤ –ª–æ–≥–∞—Ö
"""

import os
from pathlib import Path

def check_logs():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ –ª–æ–≥–∞—Ö"""
    log_dir = Path("logs")
    
    if not log_dir.exists():
        print("‚ùå –ü–∞–ø–∫–∞ logs –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
    
    print("üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤:")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º bot.log
    bot_log = log_dir / "bot.log"
    if bot_log.exists():
        try:
            with open(bot_log, 'r', encoding='utf-8-sig') as f:
                lines = f.readlines()
                print(f"üìã bot.log: {len(lines)} —Å—Ç—Ä–æ–∫")
                
                # –ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏
                error_lines = []
                for i, line in enumerate(lines[-100:], len(lines)-99):
                    if any(keyword in line.lower() for keyword in ['error', 'exception', 'traceback', 'critical']):
                        error_lines.append(f"–°—Ç—Ä–æ–∫–∞ {i}: {line.strip()}")
                
                if error_lines:
                    print(f"üö® –ù–∞–π–¥–µ–Ω–æ {len(error_lines)} –æ—à–∏–±–æ–∫:")
                    for error in error_lines[-5:]:  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –æ—à–∏–±–æ–∫
                        print(f"  {error}")
                else:
                    print("‚úÖ –û—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                    
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è bot.log: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º summarization.log
    sum_log = log_dir / "summarization.log"
    if sum_log.exists():
        try:
            with open(sum_log, 'r', encoding='utf-8-sig') as f:
                lines = f.readlines()
                print(f"üìã summarization.log: {len(lines)} —Å—Ç—Ä–æ–∫")
                
                # –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏
                if lines:
                    print("üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏:")
                    for line in lines[-3:]:
                        print(f"  {line.strip()}")
                        
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è summarization.log: {e}")

if __name__ == "__main__":
    check_logs()
