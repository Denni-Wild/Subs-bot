#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç - –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç
–ó–∞–ø—É—Å–∫: python quick_test.py
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

def quick_check():
    """–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π"""
    print("üîç –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–π...")
    
    errors = []
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç—ã
    try:
        import bot
        print("‚úÖ –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
    except Exception as e:
        errors.append(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ bot.py: {e}")
    
    try:
        from summarizer import TextSummarizer
        print("‚úÖ –ö–ª–∞—Å—Å TextSummarizer –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    except Exception as e:
        errors.append(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ summarizer.py: {e}")
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ video_id
    try:
        if hasattr(bot, 'extract_video_id'):
            video_id = bot.extract_video_id("https://www.youtube.com/watch?v=dQw4w9WgXcQ")
            if video_id == "dQw4w9WgXcQ":
                print("‚úÖ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ video_id —Ä–∞–±–æ—Ç–∞–µ—Ç")
            else:
                errors.append(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π video_id: –ø–æ–ª—É—á–µ–Ω {video_id}")
        else:
            errors.append("‚ùå –§—É–Ω–∫—Ü–∏—è extract_video_id –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    except Exception as e:
        errors.append(f"‚ùå –û—à–∏–±–∫–∞ –≤ extract_video_id: {e}")
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—É–±—Ç–∏—Ç—Ä–æ–≤
    try:
        if hasattr(bot, 'format_subtitles'):
            test_transcript = [{'start': 0, 'text': '–¢–µ—Å—Ç'}]
            result = bot.format_subtitles(test_transcript, with_time=False)
            if result == "–¢–µ—Å—Ç":
                print("‚úÖ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—É–±—Ç–∏—Ç—Ä–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            else:
                errors.append(f"‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –ø–æ–ª—É—á–µ–Ω–æ '{result}'")
        else:
            errors.append("‚ùå –§—É–Ω–∫—Ü–∏—è format_subtitles –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    except Exception as e:
        errors.append(f"‚ùå –û—à–∏–±–∫–∞ –≤ format_subtitles: {e}")
    
    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é —Å—É–º–º–∞—Ä–∏–∑–∞—Ç–æ—Ä–∞
    try:
        os.environ['OPENROUTER_API_KEY'] = 'test_key'
        summarizer = TextSummarizer()
        if len(summarizer.models) >= 8:
            print("‚úÖ –°—É–º–º–∞—Ä–∏–∑–∞—Ç–æ—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è")
        else:
            errors.append(f"‚ùå –ú–∞–ª–æ –º–æ–¥–µ–ª–µ–π –≤ —Å—É–º–º–∞—Ä–∏–∑–∞—Ç–æ—Ä–µ: {len(summarizer.models)}")
    except Exception as e:
        errors.append(f"‚ùå –û—à–∏–±–∫–∞ –≤ TextSummarizer: {e}")
    
    # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–±–∏–≤–∫—É —Ç–µ–∫—Å—Ç–∞
    try:
        text = "—Å–ª–æ–≤–æ " * 200  # 1200+ —Å–∏–º–≤–æ–ª–æ–≤
        chunks = summarizer.split_text(text, max_len=500)
        if len(chunks) > 1:
            print("‚úÖ –†–∞–∑–±–∏–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            errors.append(f"‚ùå –¢–µ–∫—Å—Ç –Ω–µ —Ä–∞–∑–±–∏–ª—Å—è –Ω–∞ —á–∞—Å—Ç–∏: {len(chunks)} —á–∞—Å—Ç–µ–π")
    except Exception as e:
        errors.append(f"‚ùå –û—à–∏–±–∫–∞ –≤ split_text: {e}")
    
    # –ò—Ç–æ–≥–∏
    print("\n" + "="*40)
    if not errors:
        print("üéâ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´!")
        print("–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        return True
    else:
        print("üí• –ù–ê–ô–î–ï–ù–´ –û–®–ò–ë–ö–ò:")
        for error in errors:
            print(f"   {error}")
        return False


if __name__ == "__main__":
    print("‚ö° –ë–´–°–¢–†–ê–Ø –ü–†–û–í–ï–†–ö–ê –§–£–ù–ö–¶–ò–ô")
    print("="*40)
    
    success = quick_check()
    
    if success:
        print("\n‚ú® –ú–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å–∫–∞—Ç—å –ø–æ–ª–Ω—ã–µ —Ç–µ—Å—Ç—ã –∏–ª–∏ –±–æ—Ç–∞!")
        print("–ö–æ–º–∞–Ω–¥—ã:")
        print("  python tests/simple_tests.py  - –ø—Ä–æ—Å—Ç—ã–µ —Ç–µ—Å—Ç—ã")
        print("  python tests/test_runner.py   - –ø–æ–ª–Ω—ã–µ —Ç–µ—Å—Ç—ã")
        print("  python bot.py                - –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞")
    else:
        print("\nüîß –¢—Ä–µ–±—É–µ—Ç—Å—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫")
    
    exit(0 if success else 1) 