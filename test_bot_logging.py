import logging
import asyncio
from bot import extract_video_id, get_available_transcripts_with_retry

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

async def test_video_processing():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –≤–∏–¥–µ–æ"""
    test_url = "https://www.youtube.com/watch?v=dQw4w9WgXcQ"
    
    logger.info("üß™ –ù–∞—á–∏–Ω–∞—é —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∏–¥–µ–æ")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ video_id
    video_id = extract_video_id(test_url)
    logger.info(f"üé¨ –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–π video_id: {video_id}")
    
    if video_id:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—É–±—Ç–∏—Ç—Ä–æ–≤
        logger.info(f"üîÑ –¢–µ—Å—Ç–∏—Ä—É—é –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—É–±—Ç–∏—Ç—Ä–æ–≤ –¥–ª—è {video_id}")
        try:
            list_transcripts, success, error_msg = await get_available_transcripts_with_retry(video_id)
            
            if success:
                logger.info(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã —Å—É–±—Ç–∏—Ç—Ä—ã: {len(list_transcripts)} —è–∑—ã–∫–æ–≤")
                for transcript in list_transcripts:
                    logger.info(f"  - {transcript.language} ({transcript.language_code})")
            else:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞: {error_msg}")
        except Exception as e:
            logger.error(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—É–±—Ç–∏—Ç—Ä–æ–≤: {e}")
    else:
        logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å video_id")

if __name__ == "__main__":
    asyncio.run(test_video_processing()) 